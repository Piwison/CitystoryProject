# Generated by Django 5.0.2 on 2025-05-22 04:40

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0019_features_refactor'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='badge',
            options={},
        ),
        migrations.AlterModelOptions(
            name='feature',
            options={'ordering': ['featureType', 'name']},
        ),
        migrations.AlterModelOptions(
            name='placephoto',
            options={'ordering': ['-uploadedAt']},
        ),
        migrations.AlterModelOptions(
            name='savedplace',
            options={},
        ),
        migrations.AlterModelOptions(
            name='userbadge',
            options={},
        ),
        migrations.RemoveIndex(
            model_name='badge',
            name='core_badge_type_3fefc8_idx',
        ),
        migrations.RemoveIndex(
            model_name='badge',
            name='core_badge_level_c98de2_idx',
        ),
        migrations.RemoveIndex(
            model_name='badge',
            name='core_badge_require_d3ff37_idx',
        ),
        migrations.RemoveIndex(
            model_name='feature',
            name='core_featur_applica_4cc5e7_idx',
        ),
        migrations.RemoveIndex(
            model_name='feature',
            name='core_featur_type_602217_idx',
        ),
        migrations.RemoveIndex(
            model_name='place',
            name='core_place_price_r_391547_idx',
        ),
        migrations.RemoveIndex(
            model_name='place',
            name='core_place_slug_ef637d_idx',
        ),
        migrations.RemoveIndex(
            model_name='review',
            name='core_review_helpful_0b7785_idx',
        ),
        migrations.RemoveIndex(
            model_name='savedplace',
            name='core_savedp_created_1a7647_idx',
        ),
        migrations.RemoveIndex(
            model_name='userbadge',
            name='core_userba_awarded_6b23b2_idx',
        ),
        migrations.RenameField(
            model_name='placephoto',
            old_name='moderation_date',
            new_name='moderated_at',
        ),
        migrations.RenameField(
            model_name='review',
            old_name='helpful_count',
            new_name='helpfulCount',
        ),
        migrations.RenameField(
            model_name='review',
            old_name='overall_rating',
            new_name='overallRating',
        ),
        migrations.AlterUniqueTogether(
            name='feature',
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name='badge',
            name='level',
        ),
        migrations.RemoveField(
            model_name='badge',
            name='points',
        ),
        migrations.RemoveField(
            model_name='badge',
            name='requirement_code',
        ),
        migrations.RemoveField(
            model_name='badge',
            name='requirement_description',
        ),
        migrations.RemoveField(
            model_name='badge',
            name='type',
        ),
        migrations.RemoveField(
            model_name='placefeature',
            name='created_at',
        ),
        migrations.RemoveField(
            model_name='placefeature',
            name='updated_at',
        ),
        migrations.RemoveField(
            model_name='placephoto',
            name='image',
        ),
        migrations.RemoveField(
            model_name='review',
            name='cleanliness_rating',
        ),
        migrations.RemoveField(
            model_name='review',
            name='food_rating',
        ),
        migrations.RemoveField(
            model_name='review',
            name='service_rating',
        ),
        migrations.RemoveField(
            model_name='review',
            name='value_rating',
        ),
        migrations.RemoveField(
            model_name='userbadge',
            name='awarded_at',
        ),
        migrations.AddField(
            model_name='badge',
            name='category',
            field=models.CharField(default='other', max_length=100),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='badge',
            name='maxLevel',
            field=models.PositiveIntegerField(default=1),
        ),
        migrations.AddField(
            model_name='feature',
            name='featureType',
            field=models.CharField(default='general', help_text='Category type: amenity, cuisine, etc.', max_length=50),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='place',
            name='avg_rating',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='place',
            name='google_maps_link',
            field=models.URLField(blank=True, max_length=255, null=True, validators=[django.core.validators.URLValidator()]),
        ),
        migrations.AddField(
            model_name='placephoto',
            name='isApproved',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='placephoto',
            name='uploadedAt',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='placephoto',
            name='url',
            field=models.CharField(default='https://placeholder.com/image.jpg', help_text='URL to the photo', max_length=255),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='review',
            name='cleanliness',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AddField(
            model_name='review',
            name='foodQuality',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AddField(
            model_name='review',
            name='service',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AddField(
            model_name='review',
            name='value',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AddField(
            model_name='savedplace',
            name='savedAt',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='user',
            name='guideLevel',
            field=models.IntegerField(default=1, help_text='Level based on points'),
        ),
        migrations.AddField(
            model_name='user',
            name='guidePoints',
            field=models.IntegerField(default=0, help_text='Points earned for contributions'),
        ),
        migrations.AddField(
            model_name='user',
            name='isVerified',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='user',
            name='location',
            field=models.CharField(blank=True, help_text="User's current location (city/country)", max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='name',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='status',
            field=models.CharField(choices=[('ACTIVE', 'Active'), ('SUSPENDED', 'Suspended'), ('DELETED', 'Deleted')], default='ACTIVE', max_length=20),
        ),
        migrations.AddField(
            model_name='userbadge',
            name='earnedAt',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='userbadge',
            name='level',
            field=models.PositiveIntegerField(default=1),
        ),
        migrations.AlterField(
            model_name='badge',
            name='icon',
            field=models.CharField(default='fa-star', max_length=255),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='badge',
            name='id',
            field=models.CharField(default='', max_length=128, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='badge',
            name='name',
            field=models.CharField(max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name='feature',
            name='id',
            field=models.CharField(default='', max_length=128, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='place',
            name='address',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='place',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='place',
            name='district',
            field=models.CharField(blank=True, choices=[('xinyi', 'Xinyi'), ('datong', 'Datong'), ('daan', "Da'an"), ('shilin', 'Shilin'), ('wanhua', 'Wanhua'), ('songshan', 'Songshan'), ('zhongshan', 'Zhongshan'), ('beitou', 'Beitou'), ('nangang', 'Nangang'), ('wenshan', 'Wenshan'), ('neihu', 'Neihu'), ('zhongzheng', 'Zhongzheng'), ('other', 'Other')], help_text='District in Taipei', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='place',
            name='features',
            field=models.ManyToManyField(blank=True, related_name='places', through='core.PlaceFeature', to='core.feature'),
        ),
        migrations.AlterField(
            model_name='place',
            name='id',
            field=models.CharField(default='', max_length=128, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='place',
            name='latitude',
            field=models.FloatField(blank=True, help_text='Auto-generated from address', null=True),
        ),
        migrations.AlterField(
            model_name='place',
            name='longitude',
            field=models.FloatField(blank=True, help_text='Auto-generated from address', null=True),
        ),
        migrations.AlterField(
            model_name='placefeature',
            name='feature',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='place_features', to='core.feature'),
        ),
        migrations.AlterField(
            model_name='placefeature',
            name='id',
            field=models.CharField(default='', max_length=128, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='placefeature',
            name='place',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='place_features', to='core.place'),
        ),
        migrations.AlterField(
            model_name='placephoto',
            name='id',
            field=models.CharField(default='', max_length=128, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='placephoto',
            name='moderation_comment',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AlterField(
            model_name='placephoto',
            name='moderation_status',
            field=models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20),
        ),
        migrations.AlterField(
            model_name='placephoto',
            name='moderator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_moderations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='placephoto',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='review',
            name='comment',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='review',
            name='id',
            field=models.CharField(default='', max_length=128, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='savedplace',
            name='id',
            field=models.CharField(max_length=128, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='savedplace',
            name='notes',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='auth_type',
            field=models.CharField(choices=[('LOCAL', 'Local'), ('GOOGLE', 'Google')], default='LOCAL', max_length=10),
        ),
        migrations.AlterField(
            model_name='user',
            name='avatar',
            field=models.CharField(blank=True, help_text='Profile image URL', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='bio',
            field=models.TextField(blank=True, help_text='Short user description', null=True),
        ),
        migrations.AlterField(
            model_name='userbadge',
            name='badge',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_badges', to='core.badge'),
        ),
        migrations.AlterField(
            model_name='userbadge',
            name='id',
            field=models.CharField(default='', max_length=128, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='userbadge',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_badges', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='badge',
            index=models.Index(fields=['name'], name='core_badge_name_5d4edd_idx'),
        ),
        migrations.AddIndex(
            model_name='badge',
            index=models.Index(fields=['category'], name='core_badge_categor_9f2821_idx'),
        ),
        migrations.AddIndex(
            model_name='feature',
            index=models.Index(fields=['featureType'], name='core_featur_feature_5f6998_idx'),
        ),
        migrations.AddIndex(
            model_name='place',
            index=models.Index(fields=['moderation_status'], name='core_place_moderat_3f07ec_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['helpfulCount'], name='core_review_helpful_09695d_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['created_at'], name='core_review_created_25a366_idx'),
        ),
        migrations.RemoveField(
            model_name='feature',
            name='applicable_place_types',
        ),
        migrations.RemoveField(
            model_name='feature',
            name='description',
        ),
        migrations.RemoveField(
            model_name='feature',
            name='type',
        ),
        migrations.AddField(
            model_name='place',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=models.CASCADE, related_name='places', to=settings.AUTH_USER_MODEL),
        ),
    ]
